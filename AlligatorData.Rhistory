b5_df <- readRDS("C:/Users/cevan/OneDrive/Desktop/Ex_Files_R_Visualizing_Data/Exercise Files/data/b5_df.rds")
install.packages("ggplot2")
View(b5_df)
geom_bar(stat="identity", width=0.5)
b5_df<-ggplot(data=df, aes(x=engnat, y=age)) + geom_bar(stat="identity")
if(!require("pacman")) install.packages("pacman")
install.packages("pacman")
pacman::p_load(datasets, pacman, psych, rio, tidyverse)
if (!requireNamespace("tidyverse", quietly = TRUE)) {}
if (!requireNamespace("tidyverse", quietly = TRUE)) {install.packages("tidyverse")}
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("readx1")
library(tidyverse)
library(readx1)
library(readx1)
data <- read_excel("C:\Users\cevan\Downloads\alligator_cleaned_data.xlsx")
data <- read_excel("Users\cevan\Downloads\alligator_cleaned_data.xlsx")
data <- read_excel("Users/cevan/Downloads/alligator_cleaned_data.xlsx")
install.packages("readxl")
library(readxl)
library(writexl)
file_path <- "C:\\Users\\cevan\\Downloads\\alligator_cleaned_data.xlsx"
pivot_table <- data %>%
group_by(Session) %>%
summarise(
Level = max(Level)
Score = sum(Score)
pivot_table <- data %>%
group_by(Session) %>%
summarise(
Level = max(Level),
Score = sum(Score),
Score_1 = mean(Score_1),
LastFail = max(LastFail, na.rm = TRUE),
GatorCount = sum(GatorCount)
)
install.packages("dplyr")
install.packages("dplyr")
library(tidyverse)
library(dplyr)
library(readxl)
pivot_table <- data %>%
dplyr::group_by(Session) %>%
dplyr::summarise(
Level = max(Level),
Score = sum(Score),
Score_1 = mean(Score_1),
LastFail = max(LastFail, na.rm = TRUE),
GatorCount = sum(GatorCount)
)
alligator_data <- read_excel("C:/Users/cevan/Downloads/alligator_cleaned_data.xlsx")
pivot_table <- alligator_data %>%
dplyr::group_by(Session) %>%
dplyr::summarise(
Level = max(Level, na.rm = TRUE),
Score = sum(Score, na.rm = TRUE),
Score_1 = mean(Score_1, na.rm = TRUE),
LastFail = max(LastFail, na.rm = TRUE),
GatorCount = sum(GatorCount, na.rm = TRUE)
)
colnames(alligator_data)
> pivot_table <- alligator_data %>%
pivot_table <- alligator_data %>%
dplyr::group_by(Session) %>%
dplyr::summarise(
Level = max(Level, na.rm = TRUE),
Score = sum(Score, na.rm = TRUE),
Score 1 = mean(Score 1, na.rm = TRUE),
pivot_table <- alligator_data %>%
dplyr::group_by(Session) %>%
dplyr::summarise(
Level = max(Level, na.rm = TRUE),
Score = sum(Score, na.rm = TRUE),
`Score 1` = mean(`Score 1`, na.rm = TRUE), # Updated to correctly reference the column
LastFail = max(LastFail, na.rm = TRUE),
GatorCount = sum(GatorCount, na.rm = TRUE)
)
View(pivot_table)
required_packages <- c("readxl", "ggplot2", "dplyr")
new_packages <- required_packages[!(required_packages %in% installed.packages()[, "Package"])]
if(length(new_packages)) install.packages(new_package)
lapply(required_packages, library, character.only = TRUE)
ggplot(alligator_data, aes(x= 'Score 1')) +
geom_histogram(binwidth = 1, fill = "blue", color = "black") +
theme_minimal() +
labs(title = "Distribution of Score 1", x = "Score 1", y = "Frequency")
alligator_data$'Score 1' <- as.numeric(as.character(alligator_data$'Score 1'))
sum(is.na(alligator_data$'Score1'))
sum(is.na(alligator_data$'Score 1'))
ggplot(alligator_data, aes(x = `Score 1`)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black") +
theme_minimal() +
labs(title = "Distribution of Score 1", x = "Score 1", y = "Frequency")
ggplot(alligator_data, aes(x = 'Score 1')) +
geom_histogram(binwidth = 50, fill = "blue", color = "black") +
xlim(c(0, 500)) +
theme_minimal() +
labs(title = "Distribution of Score 1", x = "Score 1", y = "Frequency")
alligator_data$`Score 1` <- as.numeric(as.character(alligator_data$`Score 1`))
str(alligator_data$'Score 1')
ggplot(alligator_data, aes(x = `Score 1`)) +
geom_histogram(binwidth = 50, fill = "blue", color = "black") +
xlim(c(0, 500)) + # Adjust this range based on your data
theme_minimal() +
labs(title = "Distribution of Score 1", x = "Score 1", y = "Frequency")
ggplot(alligator_data, aes(x = `Score 1`)) +
geom_histogram(binwidth = 50, fill = "blue", color = "black") +
xlim(c(0, 500)) + # Adjust this range based on your data
ylim(c(0,500)) +
theme_minimal() +
labs(title = "Distribution of Score 1", x = "Score 1", y = "Frequency")
ggplot(alligator_data, aes(x = `Score 1`)) +
geom_histogram(aes(y = ..density..), binwidth = 1, fill = "blue", alpha = 0.5) +
geom_density(alpha = .2, fill = "#FF6666") +
theme_minimal() +
labs(title = "Distribution of Score 1 with Density Overlay", x = "Score 1", y = "Density")
ggplot(alligator_data, aes(x = `Score 1`)) +
geom_histogram(aes(y = ..density..), binwidth = 1, fill = "blue", alpha = 0.5) +
geom_density(alpha = .2, fill = "#FF6666") +
facet_wrap(~ Level) +
theme_minimal() +
labs(title = "Score 1 Distribution by Level", x = "Score 1", y = "Density")
ggplot(alligator_data, aes(x = `Score 1`)) +
geom_histogram(binwidth = 50, fill = "blue", color = "black") + # Adjust binwidth as needed
coord_cartesian(xlim = c(0, 500)) + # Set x-axis limits
theme_minimal() +
labs(title = "Distribution of Score 1", x = "Score 1", y = "Frequency")
View(alligator_data)
ggplot(alligator_data, aes(x = `Score 1`)) +
geom_point() +
coord_cartesian(xlim = c(0, 500)) +
theme_minimal() +
labs(title = "Score 1 Data Points", x = "Score 1", y = "Count")
ggplot(alligator_data, aes(x = `Score 1`)) +
geom_point() +
coord_cartesian(xlim = c(0, 500)) +
theme_minimal() +
labs(title = "Score 1 Data Points", x = "Score 1", y = "Count")
# One-dimensional scatter plot for Score 1
ggplot(alligator_data, aes(x = `Score 1`, y = 0)) + # y is set to a constant since it's not relevant
geom_point(alpha = 0.5) +
coord_cartesian(xlim = c(0, 500)) +
theme_minimal() +
labs(title = "Presence of Score 1 Data Points within 0-500", x = "Score 1", y = "")
# Read the Excel file into an R data frame
stop_signal_data <- read_excel("C:\\Users\\cevan\\Downloads\\StopSignal.xlsx")
# Alternatively, using forward slashes
# stop_signal_data <- read_excel("C:/Users/cevan/Downloads/StopSignal.xlsx")
View(stop_signal_data)
# Install and load the ggplot2 package
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Create a histogram of the ResponseTime variable
ggplot(stop_signal_data, aes(x = ResponseTime)) +
geom_histogram(binwidth = 0.1, fill = "blue", color = "black") + # Adjust binwidth as needed
theme_minimal() +
labs(title = "Histogram of Response Time", x = "Response Time", y = "Frequency")
ggplot(stop_signal_data, aes(x = YourColumnNameHere)) +
geom_histogram(binwidth = 0.1, fill = "blue", color = "black") +
theme_minimal() +
labs(title = "Histogram of Variable", x = "Variable", y = "Frequency")
ggplot(stop_signal_data, aes(x = Status)) +
geom_histogram(binwidth = 0.1, fill = "blue", color = "black") +
theme_minimal() +
labs(title = "Histogram of Variable", x = "Variable", y = "Frequency")
ggplot(stop_signal_data, aes(x = Status)) +
geom_bar(fill = "blue", color = "black") +
theme_minimal() +
labs(title = "Distribution of Status", x = "Status", y = "Count")
savehistory("~/AlligatorData.Rhistory")
